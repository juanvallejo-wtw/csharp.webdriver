# Workflow Code: CosmicFalcon_v1   DO NOT REMOVE
# Purpose:
#    Runs Selenium C# tests in GitHub Actions with a manual trigger.
#    Allows users to initiate the workflow manually.
#
# Frequency:
#    - This workflow is intended to be reusable and configurable per repository.
#
# Projects to use this Template with:
#    - Testing projects that use Selenium C#.
#
# Prerequisites:
#    - Ensure that Selenium dependencies are installed in the project.

name: ðŸ§ª Run Selenium C# Tests
run-name: ðŸ§ª Run Selenium C# Tests on ${{ inputs.environment }} with ${{ inputs.browser }} browser

concurrency:
  group: selenium-${{ github.event_name == 'workflow_dispatch' && github.run_id || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      branch-tag-sha:
        description: Branch/Tag/SHA; The branch, tag, or SHA of the Selenium tests to run.
        required: false
      environment:
        description: The environment to test against
        required: true
        type: choice
        options:
          - dev
          - qa
          - stage
      browser:
        description: Browser to use for the tests.
        type: choice
        options:
          - chrome
          - firefox
          - edge
      test-filter:
        description: Test Filter - input the test category or name to run.
        required: false
        default: ''
      enable-cache:
        description: Enable caching of .NET packages to speed up builds.
        required: false
        type: boolean
        default: true
      dotnet-version:
        description: Specify the .NET SDK version to use.
        required: false
        default: '6.x'
      retention-days:
        description: Number of days to retain test results.
        required: false
        default: 5

permissions:
  id-token: write
  contents: read
  actions: read

env:
  DISPATCH_REF: ${{ inputs.branch-tag-sha || github.ref_name }}
  SELENIUM_TEST_DIR: 'Selenium'
  SELENIUM_RESULTS_DIR: 'Selenium/TestResults'
  TIMEZONE: America/Denver

jobs:
  cache:
    runs-on: windows-latest
    if: ${{ inputs.enable-cache }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Calculate Ref to Checkout
        id: calculate-ref
        run: |
          GITHUB_REF="${{ env.DISPATCH_REF }}"
          echo "GITHUB_REF=$GITHUB_REF" >> $GITHUB_ENV
          echo "GITHUB_REF=$GITHUB_REF" >> $GITHUB_OUTPUT

      - name: Annotate Inputs
        run: |
          echo $'
          | Inputs                  | Value                                                                                     |
          | ----------------------- | ----------------------------------------------------------------------------------------- |
          | Environment             | `${{ inputs.environment }}`                                                               |
          | Branch/Tag              | `${{ env.GITHUB_REF }}`                                                                   |
          | Workflow Branch/Tag     | `${{ github.ref_name }}` - SHA: `${{ github.sha }}`                                       |
          | Browser                 | `${{ inputs.browser }}`                                                                   |
          | Test Filter             | `${{ inputs.test-filter != 0 && inputs.test-filter || 'NA' }}`                            |' >> $GITHUB_STEP_SUMMARY

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Set Cache Keys
        run: echo "DOTNET_CACHE_KEY=dotnet_packages-${{ hashFiles('**/*.csproj') }}" >> $GITHUB_ENV

      - name: Check for a .NET cache
        id: has-cache
        uses: actions/cache@v4
        with:
          lookup-only: true
          key: ${{ env.DOTNET_CACHE_KEY }}
          path: |
            ~/.nuget/packages

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Restore Dependencies
        if: steps.has-cache.outputs.cache-hit != 'true'
        run: dotnet restore ${{ env.SELENIUM_TEST_DIR }}

      - name: Save cache for .NET packages
        if: steps.has-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ env.DOTNET_CACHE_KEY }}
          path: |
            ~/.nuget/packages

  build-and-test:
    runs-on: windows-latest
    needs: cache

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DISPATCH_REF }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Build Project
        run: dotnet build ${{ env.SELENIUM_TEST_DIR }} --configuration Release

      - name: Run Selenium Tests
        working-directory: '${{ env.SELENIUM_TEST_DIR }}'
        env:
          ENVIRONMENT: ${{ inputs.environment }}
          BROWSER: ${{ inputs.browser }}
        run: |
          dotnet test --configuration Release --logger "trx;LogFileName=test-results.trx" ${{ inputs.test-filter != '' && format('--filter "{0}"', inputs.test-filter) || '' }}

      - name: Copy Test Results to Results Folder
        if: ${{ always() }}
        continue-on-error: true
        run: |
          mkdir -p ${{ env.SELENIUM_RESULTS_DIR }}/reports
          cp -r ${{ env.SELENIUM_TEST_DIR }}/TestResults/*.trx ${{ env.SELENIUM_RESULTS_DIR }}/reports

      - name: Upload Selenium Test Report
        if: ${{ !cancelled() && always() }}
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-results
          path: ${{ env.SELENIUM_RESULTS_DIR }}
          retention-days: ${{ inputs.retention-days }}
