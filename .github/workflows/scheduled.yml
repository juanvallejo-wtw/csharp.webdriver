name: ðŸ§ª Scheduled Selenium C# Tests
run-name: ðŸ§ª Run Scheduled Selenium C# Tests

on:
  workflow_dispatch:  # Allows for manual trigger
  # schedule:           # Runs on a defined schedule
  #  - cron: '59 * * * *' # Run every hour

permissions:
  id-token: write
  contents: read
  actions: read

env:
  DISPATCH_REF: master
  SELENIUM_TEST_DIR: 'Selenium' # Update this to the root directory of the Selenium tests
  SELENIUM_RESULTS_DIR: 'Selenium/TestResults' # Update this to the results output directory
  DOTNET_VERSION: '8.x' # Specify the .NET SDK version to use
  DOTNET_INSTALL_DIR: './.dotnet'  
  NUGET_CACHE_PATH: '~/.nuget/packages'
  TIMEZONE: America/Denver
  ENVIRONMENTS: '["dev","qa"]' # Define environments as JSON string
  BROWSER: 'Chrome' # Set the default browser
  TEST_FILTER: 'TestMethod' # Define test filter if necessary

jobs:
  nuget-cache:
    runs-on: ubuntu-latest
    
    outputs:
      NUGET_CACHE_KEY: ${{ env.NUGET_CACHE_KEY }}
      MATRIX: '{ environment: ${{ env.ENVIRONMENTS }} }'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DISPATCH_REF }}
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
        env:
          DOTNET_INSTALL_DIR: ${{ env.DOTNET_INSTALL_DIR }}

      - name: Set Cache Keys
        shell: bash
        run: echo "NUGET_CACHE_KEY=nuget-${{ hashFiles('**/*.csproj') }}" >> $GITHUB_ENV
                
      - name: Check for a .NET cache
        id: has-cache
        uses: actions/cache@v4
        with:
          lookup-only: true
          key: ${{ env.NUGET_CACHE_KEY }}
          path: ${{ env.NUGET_CACHE_PATH }}

      - name: Restore Dependencies
        if: steps.has-cache.outputs.cache-hit != 'true'
        shell: bash
        run: dotnet restore ${{ env.SELENIUM_TEST_DIR }}

      - name: Save cache for .NET packages
        if: steps.has-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ env.NUGET_CACHE_KEY }}
          path: ${{ env.NUGET_CACHE_PATH }} 

  build-and-test:
    runs-on: ubuntu-latest
    needs: nuget-cache
    
    strategy:
      matrix: ${{ fromJson(needs.nuget-cache.outputs.MATRIX) }} # Parse the MATRIX output as JSON
      fail-fast: false

    env:
      ENVIRONMENT: ${{ matrix.environment }}
      NUGET_CACHE_KEY: ${{ needs.nuget-cache.outputs.NUGET_CACHE_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DISPATCH_REF }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download NuGet Cache
        id: restore-nuget-cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.NUGET_CACHE_KEY }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
          path: ${{ env.NUGET_CACHE_PATH }}

      - name: Build Project
        shell: bash
        run: dotnet build ${{ env.SELENIUM_TEST_DIR }} --configuration Release

      - name: Run Selenium Tests
        working-directory: '${{ env.SELENIUM_TEST_DIR }}'
        shell: bash
        env:
          ENVIRONMENT: ${{ matrix.environment }}
          BROWSER: ${{ env.BROWSER }}
          APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}
        run: |
          dotnet test --configuration Release \
          --logger "console;verbosity=detailed" \
          --logger "trx;LogFileName=test-results.trx" \
          --filter "${{ env.TEST_FILTER }}"

      - name: Copy Test Results to Results Folder
        if: ${{ always() }}
        continue-on-error: true
        shell: bash
        run: |
          mkdir -p ${{ env.SELENIUM_RESULTS_DIR }}/reports
          cp -r ${{ env.SELENIUM_TEST_DIR }}/TestResults/*.trx ${{ env.SELENIUM_RESULTS_DIR }}/reports

      - name: Upload Selenium Test Report
        if: ${{ failure() }}
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-results
          path: ${{ env.SELENIUM_RESULTS_DIR }}
          retention-days: 5
